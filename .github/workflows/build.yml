name: CI
on: push

jobs:
  build-windows:
    name: Windows Check
    runs-on: windows-latest
    strategy:
        fail-fast: false
        matrix:
            arch: [x64, ARM64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Configure
        run: |
            mkdir build
            cd build
            cmake -A${{ matrix.arch }} ..
      - name: Build
        run: |
            cd build
            cmake --build . --config release --target install
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name:  RGL_Samples_Win${{ matrix.arch }}
          path: |
                build/Release/*.exe
                build/Release/*.cso
                build/Release/*.obj
                build/Release/*.png

  build-linux:
    name: Linux Check
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo tee /etc/apt/trusted.gpg.d/lunarg.asc
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-jammy.list http://packages.lunarg.com/vulkan/lunarg-vulkan-jammy.list
          sudo apt update
          sudo apt install cmake make g++ gcc vulkan-sdk libx11-dev libx11-xcb-dev libxtst-dev xcb libxcb-xkb-dev x11-xkb-utils libxkbcommon-x11-dev --no-install-recommends -y
      - name: Configure
        run: |
            mkdir build
            cd build
            cmake -G "Unix Makefiles" ..
      - name: Build
        run: |
            cd build
            cmake --build . --config release --target install -- -j`nproc`
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name:  RGL_Samples_Linux
          path: |
                build/Release/*-*
                build/Release/*.spv
                build/Release/*.obj
                build/Release/*.png


  build-mac:
    name: macOS Check
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Configure
        run: |
            mkdir build
            cd build
            cmake -G "Xcode" ..
      - name: Build
        run: |
            cd build
            cmake --build . --config Release --target install
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
            name:  RGL_Samples_macOS
            path: |
                build/Release/*.app
    
